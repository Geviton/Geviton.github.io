const debounce=(e,t,n=!0)=>{let s;return()=>{const o=this,i=arguments,a=n&&!s;clearTimeout(s),s=setTimeout(function(){s=null,n||e.apply(o,i)},t),a&&e.apply(o,i)}},appendChildAwaitLayout=(e,t)=>new Promise((n)=>{const o=new ResizeObserver((e,t)=>{t.disconnect(),n(e)});o.observe(t),e.appendChild(t)});document.addEventListener("alpine:init",()=>{Alpine.data("Marquee",({speed:e=1,spaceX:t=0,dynamicWidthElements:n=!0})=>({dynamicWidthElements:n,async init(){if(this.dynamicWidthElements){const e=this.$el.querySelectorAll("img");e&&await Promise.all(Array.from(e).map(e=>new Promise((t)=>{e.complete?t():e.addEventListener("load",()=>{t()})})))}this.originalElement=this.$el.cloneNode(!0);const t=this.$el.scrollWidth;this.$el.style.setProperty("--marquee-width",t+"px"),this.$el.style.setProperty("--marquee-time",1/e*t/100+"s"),this.resize(),window.addEventListener("resize",debounce(this.resize.bind(this),100))},async resize(){this.$el.innerHTML=this.originalElement.innerHTML;let e=0;for(;this.$el.scrollWidth<=this.$el.clientWidth;)this.dynamicWidthElements?await appendChildAwaitLayout(this.$el,this.originalElement.children[e].cloneNode(!0)):this.$el.appendChild(this.originalElement.children[e].cloneNode(!0)),e+=1,e=e%this.originalElement.childElementCount;let t=0;for(;t<this.originalElement.childElementCount;)this.$el.appendChild(this.originalElement.children[e].cloneNode(!0)),t+=1,e+=1,e=e%this.originalElement.childElementCount}}))})